apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  selector: {app: order-service}
  ports:
  - {port: 9003, targetPort: 9003}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels: {app: order-service}
  template:
    metadata:
      labels: {app: order-service}
    spec:
      containers:
      - name: order-service
        image: order-service:v1
        imagePullPolicy: IfNotPresent
        ports:
        - {containerPort: 9003}
        env:
        - {name: SPRING_CLOUD_NACOS_DISCOVERY_SERVER_ADDR, value: "nacos:8848"}
        - {name: SPRING_DATASOURCE_URL, value: "jdbc:mysql://192.168.220.132:3306/springcloud_demo?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai"}
        - name: SPRING_DATA_REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: middleware-config # 从这个ConfigMap中读取
              key: REDIS_HOST        # 读取名为REDIS_HOST的键
        - name: SPRING_DATA_REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: middleware-config
              key: REDIS_PASSWORD
        - name: ROCKETMQ_NAME_SERVER
          valueFrom:
            configMapKeyRef:
              name: middleware-config
              key: ROCKETMQ_SERVER
        - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: middleware-config
              key: ZIPKIN_ENDPOINT